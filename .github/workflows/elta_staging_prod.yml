name: Extract, Load, Transform, and Analytics (Staging/Production)

on:
  push:
    branches:
      - main
      - prod
    paths:
      # TODO - some jobs can be triggered even if no related paths were changed
      # There is a workaround solution applied in:
      #   https://github.com/gooddata/gdc-nas/blob/master/.github/workflows/pre-merge-pipeline.yml
      # Shared
      - .github/workflows/elta_staging_prod.yml
      - .github/workflows/reusable_elta.yml
      - .env.base
      - .env.prefix_dbt_vars
      - .env.staging*
      - .env.prod*
      - Makefile
      # Extract load
      - data_pipeline/meltano.yml
      - data_pipeline/meltano_conf/**/*
      - data_pipeline/requirements-meltano.txt
      - .github/workflows/reusable_extract_load.yml
      # Transform
      - data_pipeline/macros/**/*
      - data_pipeline/models/**/*
      - data_pipeline/profile/**/*
      - data_pipeline/dbt_project.yml
      - data_pipeline/packages.yml
      - data_pipeline/requirements-dbt.txt
      - data_pipeline/requirements-gooddata.txt
      - .github/workflows/reusable_transform.yml
      # Analytics
      - data_pipeline/gooddata_layouts/**/*
      - data_pipeline/requirements-gooddata.txt
      - .github/workflows/reusable_analytics.yml

jobs:
  read-env:
    uses: ./.github/workflows/reusable_read_env.yml

  elta:
    needs: read-env
    name: ELTA (${{ github.ref == 'refs/heads/main' && 'staging' || 'prod' }})
    uses: ./.github/workflows/reusable_elta.yml
    with:
      ENVIRONMENT: "${{ github.ref == 'refs/heads/main' && 'staging' || 'prod' }}"
      MELTANO_CUSTOM_IMAGE: "${{ needs.read-env.outputs.MELTANO_CUSTOM_IMAGE }}"
      DBT_CUSTOM_IMAGE: "${{ needs.read-env.outputs.DBT_CUSTOM_IMAGE }}"
      GOODDATA_SDK_CUSTOM_IMAGE: "${{ needs.read-env.outputs.GOODDATA_SDK_CUSTOM_IMAGE }}"
    secrets: inherit

  elta-cloud:
    needs: read-env
    name: ELTA cloud (${{ github.ref == 'refs/heads/main' && 'staging' || 'prod' }})
    uses: ./.github/workflows/reusable_elta.yml
    with:
      ENVIRONMENT: "${{ github.ref == 'refs/heads/main' && 'staging' || 'prod' }}_cloud"
      MELTANO_CUSTOM_IMAGE: "${{ needs.read-env.outputs.MELTANO_CUSTOM_IMAGE }}"
      DBT_CUSTOM_IMAGE: "${{ needs.read-env.outputs.DBT_CUSTOM_IMAGE }}"
      GOODDATA_SDK_CUSTOM_IMAGE: "${{ needs.read-env.outputs.GOODDATA_SDK_CUSTOM_IMAGE }}"
      DBT_CLOUD: "true"
    secrets: inherit

  # Branch for MotherDuck DB.
  # GoodData now supports MotherDuck only in Labs environment
  #   because the issue with extensions downloaded in runtime.
  elta-labs-motherduck:
    needs: read-env
    name: ELTA MotherDuck (${{ github.ref == 'refs/heads/main' && 'staging' || 'prod' }})
    uses: ./.github/workflows/reusable_elta.yml
    with:
      ENVIRONMENT: "${{ github.ref == 'refs/heads/main' && 'staging' || 'prod' }}"
      MELTANO_CUSTOM_IMAGE: "${{ needs.read-env.outputs.MELTANO_CUSTOM_IMAGE }}"
      DBT_CUSTOM_IMAGE: "${{ needs.read-env.outputs.DBT_CUSTOM_IMAGE }}"
      GOODDATA_SDK_CUSTOM_IMAGE: "${{ needs.read-env.outputs.GOODDATA_SDK_CUSTOM_IMAGE }}"
      DB_OVERRIDE: "motherduck"
    secrets: inherit
